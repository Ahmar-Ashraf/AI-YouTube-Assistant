name: Deploy Flask with Ngrok

on: [push]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt

      - name: Install jq (for JSON processing)
        run: sudo apt-get install -y jq

      - name: Install Ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install -y ngrok

      - name: Authenticate Ngrok
        run: ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Start Flask App
        run: |
          export FLASK_APP=app.py
          nohup python -m flask run --host=0.0.0.0 --port=5000 > flask.log 2>&1 &
          sleep 5  # Ensure Flask starts before Ngrok

      - name: Start Ngrok
        run: |
          nohup ngrok http 5000 > ngrok.log 2>&1 &
          sleep 10  # Wait for Ngrok to establish a connection

      - name: Get and Store Ngrok URL
        run: |
          NGROK_URL=$(curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "Ngrok URL: $NGROK_URL"
          echo "NGROK_URL=$NGROK_URL" >> $GITHUB_ENV

      - name: Output Ngrok URL
        run: echo "Your Flask app is available at: ${{ env.NGROK_URL }}"

      - name: Debug Logs (If Failure)
        if: failure()
        run: |
          echo "Flask Logs:"
          cat flask.log || echo "No flask.log found"
          echo "Ngrok Logs:"
          cat ngrok.log || echo "No ngrok.log found"